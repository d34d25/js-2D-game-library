class e{constructor(e){this.canvas=e,this.mouseX=0,this.mouseY=0,this.mouseDown=!1,this.mousePressed=!1,this.mouseReleased=!1,this.buttonsDown=new Set,this.buttonsPressed=new Set,this.buttonsReleased=new Set,this.keysDown=new Set,this.keysPressed=new Set,this.keysReleased=new Set,this._onMouseMove=this._onMouseMove.bind(this),this._onMouseDown=this._onMouseDown.bind(this),this._onMouseUp=this._onMouseUp.bind(this),this._onKeyDown=this._onKeyDown.bind(this),this._onKeyUp=this._onKeyUp.bind(this),this.canvas.addEventListener("mousemove",this._onMouseMove),this.canvas.addEventListener("mousedown",this._onMouseDown),this.canvas.addEventListener("mouseup",this._onMouseUp),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.canvas.addEventListener("contextmenu",e=>{e.preventDefault()}),this._onMouseDownPreventMiddle=e=>{1===e.button&&e.preventDefault()},this.canvas.addEventListener("mousedown",this._onMouseDownPreventMiddle)}_onMouseMove(e){const s=this.canvas.getBoundingClientRect();this.mouseX=e.clientX-s.left,this.mouseY=e.clientY-s.top}_onMouseDown(e){this.buttonsDown.has(e.button)||this.buttonsPressed.add(e.button),this.buttonsDown.add(e.button)}_onMouseUp(e){this.buttonsDown.has(e.button)&&this.buttonsReleased.add(e.button),this.buttonsDown.delete(e.button)}_onKeyDown(e){this.keysDown.has(e.code)||this.keysPressed.add(e.code),this.keysDown.add(e.code)}_onKeyUp(e){this.keysDown.has(e.code)&&this.keysReleased.add(e.code),this.keysDown.delete(e.code)}update(){this.keysPressed.clear(),this.keysReleased.clear(),this.buttonsPressed.clear(),this.buttonsReleased.clear()}isKeyDown(e){return this.keysDown.has(e)}isKeyPressed(e){return this.keysPressed.has(e)}isKeyReleased(e){return this.keysReleased.has(e)}isMouseDown(e=0){return this.buttonsDown.has(e)}isMousePressed(e=0){return this.buttonsPressed.has(e)}isMouseReleased(e=0){return this.buttonsReleased.has(e)}getMousePosition(){return{x:this.mouseX,y:this.mouseY}}dispose(){this.canvas.removeEventListener("mousemove",this._onMouseMove),this.canvas.removeEventListener("mousedown",this._onMouseDown),this.canvas.removeEventListener("mouseup",this._onMouseUp),window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp)}}class s{constructor({image:e=null,position:s={x:0,y:0},size:t={w:10,h:10}}){this.image=e,this.position=s,this.size=t}isMouseOver(e){return e.x>=this.position.x&&e.x<=this.position.x+this.size.w&&e.y>=this.position.y&&e.y<=this.position.y+this.size.h}isClicked(e,s){const t="function"==typeof s?s():s;return this.isMouseOver(e)&&t}}export{e as Input,s as UI_Element};
